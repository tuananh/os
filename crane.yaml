package:
  name: crane
  version: 0.19.1
  epoch: 3
  description: Tool for interacting with remote images and registries.
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - ca-certificates-bundle

environment:
  contents:
    packages:
      - busybox
      - ca-certificates-bundle
      - go
  environment:
    CGO_ENABLED: "0"

pipeline:
  - uses: fetch
    with:
      uri: https://github.com/google/go-containerregistry/archive/v${{package.version}}/v${{package.version}}.tar.gz
      expected-sha256: 2a03430b0c9a8cf3fdfde2608aed99f851e5c57dfed8246bcc637d03a7ab0048

  - uses: go/bump
    with:
      deps: github.com/docker/distribution@v2.8.2 github.com/docker/docker@v24.0.9

  - uses: go/build
    with:
      packages: ./cmd/crane
      ldflags: -s -w -buildid= -X github.com/google/go-containerregistry/cmd/crane/cmd.Version=${{package.version}} -X github.com/google/go-containerregistry/pkg/v1/remote/transport.Version=${{package.version}}
      output: crane

  - uses: strip

update:
  enabled: true
  github:
    identifier: google/go-containerregistry
    strip-prefix: v

test:
  environment:
    contents:
      packages:
        - jq
  pipeline:
    - name: Verify Crane installation
      runs: |
        crane version || exit 1
    - name: Fetch and verify manifest
      runs: |
        crane manifest chainguard/static | jq '.schemaVersion' | grep '2' || exit 1
    - name: List tags for a public image
      runs: |
        crane ls chainguard/static | grep -E 'latest|v[0-9]+.[0-9]+.[0-9]+' || exit 1
    - name: Validate image existence
      runs: |
        crane digest chainguard/static:latest && echo "Image exists" || exit 1
    - name: Pull and save an image locally
      runs: |
        crane pull chainguard/static:latest static_latest.tar || exit 1
        [ -f static_latest.tar ] || exit 1
